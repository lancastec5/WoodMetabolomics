---
title: "Unknown Classification"
author: "Cady Lancaster"
format: html
editor: visual
---

# Classifying Unknowns

```{r}
# Set the main directory path
mainDir <- "C:/Users/cla11kg/OneDrive - The Royal Botanic Gardens, Kew/R projects/ForeshawWood/foRshaw/"

# Set the main directory path
mainDir <- "C:/Users/cla11kg/OneDrive - The Royal Botanic Gardens, Kew/R projects/ForeshawWood/foRshaw/"

source(file.path(mainDir, 'R', 'test_rfv2.R')) 
source(file.path(mainDir, 'R', 'testresults_hm.R')) 

library(readr)
data <- read_csv(file.path(mainDir, "/output/data_thresh2_mmu1000.csv"))
data[sapply(data, is.numeric)][is.na(data[sapply(data, is.numeric)])] <- 0


model <- load(file.path(mainDir,"RFmodels/model.balanced_Hongmu_species_2025-02-18.Rdata"))
fit.list <- model.balanced$fit.list

conflicts_prefer(dplyr::filter)

#Unknown data to be classified
unk.data <- data %>% filter(type == "Unknown") 
unk.data = unk.data[,c(3,5:ncol(unk.data))] 

#reference data for referencing classification levels used from fit.list models
ref.data <- data %>% filter(type == "Reference")
ref.data$species <- as.factor(ref.data$species)
class_levels <- levels(ref.data$species)
class_levels 

#class levels for each
unk.data$ID <- as.factor(unk.data$ID)
unk_levels <- levels(unk.data$ID)
unk_levels 


variable <- "ID"

new_data <- unk.data

```

```{r}

# Assuming result from test_rf function
result <- test_rf(new_data, fit.list, class_levels, unk_levels, "ID")

# Generate heatmap without clustering
testresults_hm(
result$conf_matrix,
 levels = c(unk_levels, class_levels)
)

```

# References

-   Wickham H, François R, Henry L, Müller K (2023). *dplyr: A Grammar of Data Manipulation*. R package version 1.1.3.\
    <https://CRAN.R-project.org/package=dplyr>

-   Wickham H (2019). *conflicted: An Alternative Conflict Resolution Strategy*. R package version 1.0.4.\
    <https://CRAN.R-project.org/package=conflicted>

-   Kassambara A (2023). *ggpubr: 'ggplot2' Based Publication Ready Plots*. R package version 0.6.0.\
    <https://CRAN.R-project.org/package=ggpubr>

-   Wickham H, Bryan J (2023). *tidyverse: Easily Install and Load the 'Tidyverse'*. R package version 2.0.0.\
    <https://CRAN.R-project.org/package=tidyverse>

-   Hahsler M, Piekenbrock M, Doran D (2023). *dbscan: Density-Based Spatial speciesing of Applications with Noise (DBSCAN) and Related Algorithms*. R package version 1.1-11.\
    <https://CRAN.R-project.org/package=dbscan>

-   Kuhn M (2023). *caret: Classification and Regression Training*. R package version 6.0-94.\
    <https://CRAN.R-project.org/package=caret>

-   Liaw A, Wiener M (2002). *Classification and Regression by randomForest*. *R News*, 2(3), 18-22.\
    <https://CRAN.R-project.org/package=randomForest>

-   Finch, K., Espinoza, E., Jones, F. A., & Cronn, R. (2017). Source identification of western Oregon Douglas‐fir wood cores using mass spectrometry and random forest classification. *Applications in Plant Sciences*, *5*(5), 1600158

-   Xie Y (2023). knitr: A General-Purpose Package for Dynamic Report Generation in R. R package version 1.44. <https://CRAN.R-project.org/package=knitr>

-   Zhu H (2023). kableExtra: Construct Complex Table with 'kable' and Pipe Syntax. R package version 1.3.4. <https://CRAN.R-project.org/package=kableExtra>
